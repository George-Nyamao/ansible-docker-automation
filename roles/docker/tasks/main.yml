---
- name: Remove old Docker versions
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  tags: docker

- name: Install prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-pip
      - python3-setuptools
    state: present
    update_cache: yes
  tags: docker

- name: Create directory for Docker GPG key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  tags: docker

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present
  tags: docker

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  tags: docker

- name: Install Docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  tags: docker

- name: Install Docker Python libraries
  pip:
    name:
      - docker>=6.1.0
      - docker-compose>=1.29.2
      - requests>=2.28.0
    state: present
  tags: docker

- name: Create Docker configuration directory
  file:
    path: /etc/docker
    state: directory
    mode: '0755'
  tags: docker

- name: Configure Docker daemon
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: restart docker
  tags: docker

- name: Create Docker group
  group:
    name: docker
    state: present
  tags: docker

- name: Add user to Docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  
# Continue roles/docker/tasks/main.yml
cat >> roles/docker/tasks/main.yml << 'EOF'
  tags: docker

- name: Enable and start Docker service
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  tags: docker

- name: Create Docker networks
  docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver }}"
    ipam_config: "{{ item.ipam_config }}"
    state: present
  loop: "{{ docker_networks }}"
  tags: docker, networks

- name: Create Docker volumes
  docker_volume:
    name: "{{ item.name }}"
    state: present
  loop: "{{ docker_volumes }}"
  tags: docker, volumes

- name: Install Docker Compose standalone
  get_url:
    url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  tags: docker, compose

- name: Verify Docker installation
  command: docker --version
  register: docker_version_output
  changed_when: false
  tags: docker

- name: Display Docker version
  debug:
    var: docker_version_output.stdout
  tags: docker
